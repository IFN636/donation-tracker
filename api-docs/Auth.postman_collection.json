{
	"info": {
		"_postman_id": "715125c2-3314-423a-83e5-bc658407a6f0",
		"name": "Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48241488",
		"_collection_link": "https://www.postman.com/khangdev20-6242397/workspace/ifn636/collection/48241488-715125c2-3314-423a-83e5-bc658407a6f0?action=share&source=collection_link&creator=48241488"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// Basic test: status code should be 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('string_you_want_to_search')\r",
							"})\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\")\r",
							"})\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"})\r",
							"\r",
							"// Save JWT toke to environment variable (adjust key as needed)\r",
							"if (response.token) {\r",
							"    pm.environment.set(\"JWT\", response.token)\r",
							"    console.log(\"JWT Token saved to environment\")\r",
							"} else {\r",
							"    console.warn(\"No Token found in response!\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"lenhutkhangvo@gmail.com\",\r\n    \"password\": \"Testing@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/auth/login",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body\r",
							"let response = pm.response.json()\r",
							"\r",
							"// Basic test: status code should be 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('string_you_want_to_search')\r",
							"})\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\")\r",
							"})\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200)\r",
							"})\r",
							"\r",
							"// Save JWT toke to environment variable (adjust key as needed)\r",
							"if (response.token) {\r",
							"    pm.environment.set(\"JWT\", response.token)\r",
							"    console.log(\"JWT Token saved to environment\")\r",
							"} else {\r",
							"    console.warn(\"No Token found in response!\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Hieu Nguyen\",\r\n    \"email\": \"hnn@gmail.com\",\r\n    \"password\": \"Testing@123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/auth/register",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{BASE_URL}}/auth/profile",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/auth/profile",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"auth",
						"profile"
					]
				}
			},
			"response": []
		}
	]
}